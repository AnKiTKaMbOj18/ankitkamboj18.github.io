{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["MainContainer","styled","Main","mixins","sidePadding","IndexPage","location","data","id","hero","edges","about","jobs","featured","contact","pageQuery"],"mappings":"0FAAA,4FAOMA,EAAgBC,YAAOC,KAAV,2EAAGD,CAAH,+BACfE,IAAOC,aAsBIC,UAlBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OAChB,kBAAC,IAAD,CAAQD,SAAUA,GAChB,kBAACN,EAAD,CAAeQ,GAAG,WAChB,kBAAC,IAAD,CAAMD,KAAMA,EAAKE,KAAKC,QACtB,kBAAC,IAAD,CAAOH,KAAMA,EAAKI,MAAMD,QACxB,kBAAC,IAAD,CAAMH,KAAMA,EAAKK,KAAKF,QACtB,kBAAC,IAAD,CAAUH,KAAMA,EAAKM,SAASH,QAE9B,kBAAC,IAAD,CAASH,KAAMA,EAAKO,QAAQJ,WAY3B,IAAMK,EAAS","file":"component---src-pages-index-js-80c480801d5455240435.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { Layout, Hero, About, Jobs, Featured, Projects, Contact } from '@components';\r\nimport styled from 'styled-components';\r\nimport { mixins, Main } from '@styles';\r\n\r\nconst MainContainer = styled(Main)`\r\n  ${mixins.sidePadding};\r\n  counter-reset: section;\r\n`;\r\n\r\nconst IndexPage = ({ location, data }) => (\r\n  <Layout location={location}>\r\n    <MainContainer id=\"content\">\r\n      <Hero data={data.hero.edges} />\r\n      <About data={data.about.edges} />\r\n      <Jobs data={data.jobs.edges} />\r\n      <Featured data={data.featured.edges} />\r\n      {/* <Projects data={data.projects.edges} /> */}\r\n      <Contact data={data.contact.edges} />\r\n    </MainContainer>\r\n  </Layout>\r\n);\r\n\r\nIndexPage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            name\r\n            subtitle\r\n            contactText\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            avatar {\r\n              childImageSharp {\r\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n            skills\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    jobs: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            company\r\n            location\r\n            range\r\n            url\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    featured: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n            tech\r\n            github\r\n            external\r\n            show\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    projects: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            image\r\n            tech\r\n            github\r\n            external\r\n            show\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}